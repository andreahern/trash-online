{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:3002\");\nexport const host = async newGame => {\n  const {\n    username\n  } = jwt_decode(localStorage.token);\n  const response = await axios.post(\"/host\", {\n    host: username,\n    name: newGame.gameName,\n    password: newGame.password\n  }, {\n    headers: {\n      Authorization: localStorage.token\n    }\n  });\n  localStorage.setItem(\"gametoken\", response.data);\n  return response.data;\n};\nexport const find = async () => {\n  return await axios.get(\"/join\", {\n    headers: {\n      Authorization: localStorage.token\n    }\n  });\n};\nexport const join = async newUser => {\n  const {\n    username\n  } = jwt_decode(localStorage.token);\n  const response = await axios.put(\"/join\", {\n    guest: username,\n    id: newUser.id,\n    password: newUser.password\n  }, {\n    headers: {\n      Authorization: localStorage.token\n    }\n  });\n  localStorage.setItem(\"gametoken\", response.data);\n  return response.data;\n};\nexport const getState = async data => {\n  const response = await axios.post(\"/state\", data, {\n    headers: {\n      Authorization: localStorage.token\n    }\n  });\n  return response.data;\n};\nexport const deal = async (id, state) => {\n  await socket.emit(\"deal\", {\n    id,\n    state\n  });\n};\nexport const draw = async (id, state) => {\n  await socket.emit(\"draw\", {\n    id,\n    state\n  });\n};\nexport const take = async (id, state) => {\n  await socket.emit(\"take\", {\n    id,\n    state\n  });\n};\nexport const roundWon = async (id, playerWon, state) => {\n  await socket.emit(\"roundWon\", {\n    id,\n    playerWon,\n    state\n  });\n};\nexport const end = async (id, state) => {\n  await socket.emit(\"endTurn\", {\n    id,\n    state\n  });\n};\nexport const swapCards = async (id, index, state) => {\n  await socket.emit(\"swap\", {\n    id,\n    index,\n    state\n  });\n};\nexport const reset = async (id, state) => {\n  await socket.emit(\"reset\", {\n    id,\n    state\n  });\n};\nexport const scores = async (playerNumber, playerWon) => {\n  await axios.put(\"/scores\", {\n    playerNumber,\n    playerWon\n  }, {\n    headers: {\n      Authorization: localStorage.token\n    }\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/Abe/Documents/projects/trash-online/client/src/GameFunctions.js"],"names":["axios","jwt_decode","io","socket","host","newGame","username","localStorage","token","response","post","name","gameName","password","headers","Authorization","setItem","data","find","get","join","newUser","put","guest","id","getState","deal","state","emit","draw","take","roundWon","playerWon","end","swapCards","index","reset","scores","playerNumber"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:3002\");\n\nexport const host = async (newGame) => {\n  const { username } = jwt_decode(localStorage.token);\n\n  const response = await axios.post(\n    \"/host\",\n    {\n      host: username,\n      name: newGame.gameName,\n      password: newGame.password,\n    },\n    { headers: { Authorization: localStorage.token } }\n  );\n\n  localStorage.setItem(\"gametoken\", response.data);\n  return response.data;\n};\n\nexport const find = async () => {\n  return await axios.get(\"/join\", {\n    headers: { Authorization: localStorage.token },\n  });\n};\n\nexport const join = async (newUser) => {\n  const { username } = jwt_decode(localStorage.token);\n  const response = await axios.put(\n    \"/join\",\n    {\n      guest: username,\n      id: newUser.id,\n      password: newUser.password,\n    },\n    { headers: { Authorization: localStorage.token } }\n  );\n  localStorage.setItem(\"gametoken\", response.data);\n  return response.data;\n};\n\nexport const getState = async (data) => {\n  const response = await axios.post(\"/state\", data, {\n    headers: { Authorization: localStorage.token },\n  });\n  return response.data;\n};\n\nexport const deal = async (id, state) => {\n  await socket.emit(\"deal\", { id, state });\n};\n\nexport const draw = async (id, state) => {\n  await socket.emit(\"draw\", { id, state });\n};\n\nexport const take = async (id, state) => {\n  await socket.emit(\"take\", { id, state });\n};\n\nexport const roundWon = async (id, playerWon, state) => {\n  await socket.emit(\"roundWon\", { id, playerWon, state });\n};\n\nexport const end = async (id, state) => {\n  await socket.emit(\"endTurn\", { id, state });\n};\n\nexport const swapCards = async (id, index, state) => {\n  await socket.emit(\"swap\", { id, index, state });\n};\nexport const reset = async (id, state) => {\n  await socket.emit(\"reset\", { id, state });\n};\n\nexport const scores = async (playerNumber, playerWon) => {\n  await axios.put(\n    \"/scores\",\n    {\n      playerNumber,\n      playerWon,\n    },\n    {\n      headers: { Authorization: localStorage.token },\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}