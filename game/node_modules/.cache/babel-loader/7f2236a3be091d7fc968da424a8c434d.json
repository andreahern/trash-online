{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/Abe/Documents/projects/trash-online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{draw,take,deal,end,roundWon,swapCards,getState,reset,scores}from\"../../GameFunctions\";import\"../../App.css\";import Card from\"./Card\";import BoardController from\"./BoardController\";import EndRound from\"./EndRound.js\";import EndGame from\"./EndGame.js\";import io from\"socket.io-client\";import jwt_decode from\"jwt-decode\";var socket=io(\"http://localhost:3002\");var Table=/*#__PURE__*/function(_Component){_inherits(Table,_Component);var _super=_createSuper(Table);function Table(){var _this;_classCallCheck(this,Table);_this=_super.call(this);_this.drawCards=function(){if(_this.state.currentPlayer!==_this.state.playerNumber)return;draw(_this.state.id,_this.state);};_this.takeTrash=function(){if(_this.state.currentPlayer!==_this.state.playerNumber)return;take(_this.state.id,_this.state);};_this.dealCards=function(){if(_this.state.currentPlayer!==_this.state.playerNumber)return;deal(_this.state.id,_this.state);};_this.endTurn=function(){if(_this.state.currentPlayer!==_this.state.playerNumber)return;end(_this.state.id,_this.state);};_this.swap=function(index){if(_this.state.currentPlayer!==_this.state.playerNumber)return;swapCards(_this.state.id,index,_this.state);};_this.roundWon=function(playerWon){roundWon(_this.state.id,playerWon,_this.state);};_this.resetGame=function(){if(_this.state.currentPlayer!==_this.state.playerNumber)return;reset(_this.state.id,_this.state);};_this.return=function(){scores(_this.state.playerNumber,_this.state.playerWon);_this.props.history.push(\"/profile\");};_this.state={id:\"\",activePlayers:0,player1Name:\"\",player2Name:\"\",playerNumber:0,deck:[],hand:\"\",trash:[],currentPlayer:1,gameInSession:false,playerPlaying:false,player1Size:10,player2Size:10,player1Cards:[],player2Cards:[],player1Flipped:new Array(10).fill(0),player2Flipped:new Array(10).fill(0),playerWon:0};return _this;}_createClass(Table,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var id,_jwt_decode,username,_yield$getState,deck,playerNumber;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=localStorage.gametoken;_jwt_decode=jwt_decode(localStorage.token),username=_jwt_decode.username;socket.emit(\"joinGame\",{id:id,username:username});socket.on(\"showConnections\",function(data){return _this2.setState(data);});socket.on(\"dealResponse\",function(data){return _this2.setState(data);});socket.on(\"drawResponse\",function(data){return _this2.setState(data);});socket.on(\"swapResponse\",function(data){return _this2.setState(data);});socket.on(\"endTurnResponse\",function(data){return _this2.setState(data);});socket.on(\"takeResponse\",function(data){return _this2.setState(data);});socket.on(\"roundWonResponse\",function(data){return _this2.setState(data);});socket.on(\"resetResponse\",function(data){return _this2.setState(data);});socket.on(\"initResponse\",function(data){return _this2.setState(data);});_context.next=14;return getState({id:id});case 14:_yield$getState=_context.sent;deck=_yield$getState.deck;playerNumber=this.state.activePlayers===1?1:-1;_context.next=19;return this.setState({id:{id:id},playerNumber:playerNumber,deck:deck});case 19:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"waiting\",value:function waiting(){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 m-auto\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"fas fa-caret-right fa-3x\"},\"Trash Online\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card card-body text-center\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"fas fa-caret-right fa-2x\"},\"Waiting for someone to join.\")))));}},{key:\"table\",value:function table(){var _this3=this;if(this.state.player1Size===0||this.state.player2Size===0)return/*#__PURE__*/React.createElement(EndGame,{player1Name:this.state.player1Name,player2Name:this.state.player2Name,playerWon:this.state.playerWon,return:function _return(){return _this3.return();}});else if(this.state.playerWon!==0)return/*#__PURE__*/React.createElement(EndRound,{player1Name:this.state.player1Name,player2Name:this.state.player2Name,playerWon:this.state.playerWon,reset:function reset(){return _this3.resetGame();}});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"Table\"},/*#__PURE__*/React.createElement(Card,{value:/*#__PURE__*/React.createElement(\"img\",{src:require(\"./assets/top.png\"),alt:\"top\"}),type:\"Deck\"}),/*#__PURE__*/React.createElement(Card,{value:this.state.trash.length>0?/*#__PURE__*/React.createElement(\"img\",{src:require(\"./assets/\".concat([this.state.trash.slice(-1)],\".png\")),alt:\"\"}):/*#__PURE__*/React.createElement(\"p\",null,\"Trash\"),type:\"Card\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"Options\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.dealCards();},disabled:this.state.gameInSession},\"Deal\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.drawCards();},disabled:!this.state.gameInSession||this.state.playerPlaying},\"Draw\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.takeTrash();},disabled:!this.state.gameInSession||this.state.playerPlaying||this.state.trash.length===0},\"Take Trash\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.endTurn();},disabled:!this.state.gameInSession||!this.state.playerPlaying},\"End Turn\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.resetGame();},disabled:!this.state.gameInSession},\"Reset\")),/*#__PURE__*/React.createElement(\"div\",null,this.state.gameInSession?/*#__PURE__*/React.createElement(BoardController,{id:this.state.id,player:this.state.currentPlayer,player1Name:this.state.player1Name,player2Name:this.state.player2Name,player1Cards:this.state.player1Cards,player2Cards:this.state.player2Cards,player1Flipped:this.state.player1Flipped,player2Flipped:this.state.player2Flipped,player1Size:this.state.player1Size,player2Size:this.state.player2Size,hand:this.state.hand,handleSwap:this.swap,callWin:this.roundWon}):null));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.state.activePlayers!==2?this.waiting():this.table());}}]);return Table;}(Component);export default Table;","map":{"version":3,"sources":["/mnt/c/Users/Abe/Documents/projects/trash-online/client/src/views/Game/Table.js"],"names":["React","Component","draw","take","deal","end","roundWon","swapCards","getState","reset","scores","Card","BoardController","EndRound","EndGame","io","jwt_decode","socket","Table","drawCards","state","currentPlayer","playerNumber","id","takeTrash","dealCards","endTurn","swap","index","playerWon","resetGame","return","props","history","push","activePlayers","player1Name","player2Name","deck","hand","trash","gameInSession","playerPlaying","player1Size","player2Size","player1Cards","player2Cards","player1Flipped","Array","fill","player2Flipped","localStorage","gametoken","token","username","emit","on","data","setState","require","length","slice","waiting","table"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  draw,\n  take,\n  deal,\n  end,\n  roundWon,\n  swapCards,\n  getState,\n  reset,\n  scores,\n} from \"../../GameFunctions\";\nimport \"../../App.css\";\nimport Card from \"./Card\";\nimport BoardController from \"./BoardController\";\nimport EndRound from \"./EndRound.js\";\nimport EndGame from \"./EndGame.js\";\nimport io from \"socket.io-client\";\nimport jwt_decode from \"jwt-decode\";\nconst socket = io(\"http://localhost:3002\");\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      activePlayers: 0,\n      player1Name: \"\",\n      player2Name: \"\",\n      playerNumber: 0,\n      deck: [],\n      hand: \"\",\n      trash: [],\n      currentPlayer: 1,\n      gameInSession: false,\n      playerPlaying: false,\n      player1Size: 10,\n      player2Size: 10,\n      player1Cards: [],\n      player2Cards: [],\n      player1Flipped: new Array(10).fill(0),\n      player2Flipped: new Array(10).fill(0),\n      playerWon: 0,\n    };\n  }\n\n  drawCards = () => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    draw(this.state.id, this.state);\n  };\n\n  takeTrash = () => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    take(this.state.id, this.state);\n  };\n\n  dealCards = () => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    deal(this.state.id, this.state);\n  };\n\n  endTurn = () => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    end(this.state.id, this.state);\n  };\n\n  swap = (index) => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    swapCards(this.state.id, index, this.state);\n  };\n\n  roundWon = (playerWon) => {\n    roundWon(this.state.id, playerWon, this.state);\n  };\n\n  resetGame = () => {\n    if (this.state.currentPlayer !== this.state.playerNumber) return;\n    reset(this.state.id, this.state);\n  };\n\n  return = () => {\n    scores(this.state.playerNumber, this.state.playerWon);\n    this.props.history.push(`/profile`);\n  };\n\n  async componentDidMount() {\n    const id = localStorage.gametoken;\n    const { username } = jwt_decode(localStorage.token);\n\n    socket.emit(\"joinGame\", { id, username });\n\n    socket.on(\"showConnections\", (data) => this.setState(data));\n    socket.on(\"dealResponse\", (data) => this.setState(data));\n    socket.on(\"drawResponse\", (data) => this.setState(data));\n    socket.on(\"swapResponse\", (data) => this.setState(data));\n    socket.on(\"endTurnResponse\", (data) => this.setState(data));\n    socket.on(\"takeResponse\", (data) => this.setState(data));\n    socket.on(\"roundWonResponse\", (data) => this.setState(data));\n    socket.on(\"resetResponse\", (data) => this.setState(data));\n    socket.on(\"initResponse\", (data) => this.setState(data));\n\n    const { deck } = await getState({ id });\n    let playerNumber = this.state.activePlayers === 1 ? 1 : -1;\n    await this.setState({\n      id: { id },\n      playerNumber,\n      deck,\n    });\n  }\n\n  waiting() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto\">\n            <h1 className=\"fas fa-caret-right fa-3x\">Trash Online</h1>\n            <div className=\"card card-body text-center\">\n              <h3 className=\"fas fa-caret-right fa-2x\">\n                Waiting for someone to join.\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  table() {\n    if (this.state.player1Size === 0 || this.state.player2Size === 0)\n      return (\n        <EndGame\n          player1Name={this.state.player1Name}\n          player2Name={this.state.player2Name}\n          playerWon={this.state.playerWon}\n          return={() => this.return()}\n        />\n      );\n    else if (this.state.playerWon !== 0)\n      return (\n        <EndRound\n          player1Name={this.state.player1Name}\n          player2Name={this.state.player2Name}\n          playerWon={this.state.playerWon}\n          reset={() => this.resetGame()}\n        />\n      );\n    return (\n      <div>\n        <div className=\"Table\">\n          <Card\n            value={<img src={require(\"./assets/top.png\")} alt=\"top\" />}\n            type=\"Deck\"\n          />\n          <Card\n            value={\n              this.state.trash.length > 0 ? (\n                <img\n                  src={require(`./assets/${[this.state.trash.slice(-1)]}.png`)}\n                  alt=\"\"\n                />\n              ) : (\n                <p>Trash</p>\n              )\n            }\n            type=\"Card\"\n          />\n        </div>\n\n        <div className=\"Options\">\n          <button\n            onClick={() => this.dealCards()}\n            disabled={this.state.gameInSession}\n          >\n            Deal\n          </button>\n          <button\n            onClick={() => this.drawCards()}\n            disabled={!this.state.gameInSession || this.state.playerPlaying}\n          >\n            Draw\n          </button>\n          <button\n            onClick={() => this.takeTrash()}\n            disabled={\n              !this.state.gameInSession ||\n              this.state.playerPlaying ||\n              this.state.trash.length === 0\n            }\n          >\n            Take Trash\n          </button>\n          <button\n            onClick={() => this.endTurn()}\n            disabled={!this.state.gameInSession || !this.state.playerPlaying}\n          >\n            End Turn\n          </button>\n          <button\n            onClick={() => this.resetGame()}\n            disabled={!this.state.gameInSession}\n          >\n            Reset\n          </button>\n        </div>\n        <div>\n          {this.state.gameInSession ? (\n            <BoardController\n              id={this.state.id}\n              player={this.state.currentPlayer}\n              player1Name={this.state.player1Name}\n              player2Name={this.state.player2Name}\n              player1Cards={this.state.player1Cards}\n              player2Cards={this.state.player2Cards}\n              player1Flipped={this.state.player1Flipped}\n              player2Flipped={this.state.player2Flipped}\n              player1Size={this.state.player1Size}\n              player2Size={this.state.player2Size}\n              hand={this.state.hand}\n              handleSwap={this.swap}\n              callWin={this.roundWon}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.activePlayers !== 2 ? this.waiting() : this.table()}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}