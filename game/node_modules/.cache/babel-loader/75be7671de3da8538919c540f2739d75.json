{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Abe/Documents/projects/trash-online/game/src/views/Game/BoardController.js\";\nimport React, { Component } from \"react\";\nimport PlayerBoard from \"./PlayerBoard\";\n\nclass BoardController extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.flippedAll = () => {\n      if (this.props.player === 1 && this.props.player1Flipped.every((val, i, arr) => val === 1)) {\n        this.props.callWin(1);\n      } else if (this.props.player === -1 && this.props.player2Flipped.every((val, i, arr) => val === 1)) {\n        console.log(this.props.player2Flipped);\n        this.props.callWin(2);\n      }\n    };\n\n    this.clickHandler = async index => {\n      await this.props.handleSwap(index);\n    };\n  }\n\n  componentDidUpdate() {\n    this.flippedAll();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, this.props.player === 1 ? /*#__PURE__*/React.createElement(PlayerBoard, {\n      cards: this.props.player1Cards,\n      currentPlayer: 1,\n      playerName: this.props.player1Name,\n      hand: this.props.hand,\n      flipped: this.props.player1Flipped,\n      handleClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(PlayerBoard, {\n      cards: this.props.player2Cards,\n      currentPlayer: 2,\n      playerName: this.props.player2Name,\n      hand: this.props.hand,\n      flipped: this.props.player2Flipped,\n      handleClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default BoardController;","map":{"version":3,"sources":["/mnt/c/Users/Abe/Documents/projects/trash-online/game/src/views/Game/BoardController.js"],"names":["React","Component","PlayerBoard","BoardController","flippedAll","props","player","player1Flipped","every","val","i","arr","callWin","player2Flipped","console","log","clickHandler","index","handleSwap","componentDidUpdate","render","player1Cards","player1Name","hand","player2Cards","player2Name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACtCG,UADsC,GACzB,MAAM;AACjB,UACE,KAAKC,KAAL,CAAWC,MAAX,KAAsB,CAAtB,IACA,KAAKD,KAAL,CAAWE,cAAX,CAA0BC,KAA1B,CAAgC,CAACC,GAAD,EAAMC,CAAN,EAASC,GAAT,KAAiBF,GAAG,KAAK,CAAzD,CAFF,EAGE;AACA,aAAKJ,KAAL,CAAWO,OAAX,CAAmB,CAAnB;AACD,OALD,MAKO,IACL,KAAKP,KAAL,CAAWC,MAAX,KAAsB,CAAC,CAAvB,IACA,KAAKD,KAAL,CAAWQ,cAAX,CAA0BL,KAA1B,CAAgC,CAACC,GAAD,EAAMC,CAAN,EAASC,GAAT,KAAiBF,GAAG,KAAK,CAAzD,CAFK,EAGL;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWQ,cAAvB;AACA,aAAKR,KAAL,CAAWO,OAAX,CAAmB,CAAnB;AACD;AACF,KAdqC;;AAAA,SAgBtCI,YAhBsC,GAgBvB,MAAOC,KAAP,IAAiB;AAC9B,YAAM,KAAKZ,KAAL,CAAWa,UAAX,CAAsBD,KAAtB,CAAN;AACD,KAlBqC;AAAA;;AAoBtCE,EAAAA,kBAAkB,GAAG;AACnB,SAAKf,UAAL;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWC,MAAX,KAAsB,CAAtB,gBACC,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWgB,YADpB;AAEE,MAAA,aAAa,EAAE,CAFjB;AAGE,MAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWiB,WAHzB;AAIE,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWkB,IAJnB;AAKE,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWE,cALtB;AAME,MAAA,WAAW,EAAE,KAAKS,YANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAUC,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWmB,YADpB;AAEE,MAAA,aAAa,EAAE,CAFjB;AAGE,MAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWoB,WAHzB;AAIE,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWkB,IAJnB;AAKE,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWQ,cALtB;AAME,MAAA,WAAW,EAAE,KAAKG,YANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADF;AAuBD;;AAhDqC;;AAmDxC,eAAeb,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PlayerBoard from \"./PlayerBoard\";\n\nclass BoardController extends Component {\n  flippedAll = () => {\n    if (\n      this.props.player === 1 &&\n      this.props.player1Flipped.every((val, i, arr) => val === 1)\n    ) {\n      this.props.callWin(1);\n    } else if (\n      this.props.player === -1 &&\n      this.props.player2Flipped.every((val, i, arr) => val === 1)\n    ) {\n      console.log(this.props.player2Flipped);\n      this.props.callWin(2);\n    }\n  };\n\n  clickHandler = async (index) => {\n    await this.props.handleSwap(index);\n  };\n\n  componentDidUpdate() {\n    this.flippedAll();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.player === 1 ? (\n          <PlayerBoard\n            cards={this.props.player1Cards}\n            currentPlayer={1}\n            playerName={this.props.player1Name}\n            hand={this.props.hand}\n            flipped={this.props.player1Flipped}\n            handleClick={this.clickHandler}\n          />\n        ) : (\n          <PlayerBoard\n            cards={this.props.player2Cards}\n            currentPlayer={2}\n            playerName={this.props.player2Name}\n            hand={this.props.hand}\n            flipped={this.props.player2Flipped}\n            handleClick={this.clickHandler}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BoardController;\n"]},"metadata":{},"sourceType":"module"}